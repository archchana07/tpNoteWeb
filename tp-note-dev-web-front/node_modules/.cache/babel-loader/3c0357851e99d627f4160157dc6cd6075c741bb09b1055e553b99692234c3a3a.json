{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'IndexPage',\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      products: [],\n      list_cart: [],\n      total_price: 0,\n      nbr_product: 0,\n      error: null,\n      newProduct: {\n        name: '',\n        desc: '',\n        price: 0\n      }\n    };\n  },\n  created() {\n    this.fetchProducts();\n    this.fetchCart();\n  },\n  methods: {\n    //Fonction permettant de récupérer ou ajouter des éléments via le server\n    async fetchProducts() {\n      try {\n        const response = await axios.get('http://localhost:3004/api/products/');\n        this.products = response.data.result;\n        console.log(this.products);\n      } catch (error) {\n        this.error = 'Failed to fetch products.';\n      }\n    },\n    async fetchCart() {\n      try {\n        const response = await axios.get('http://localhost:3004/api/carts/');\n        this.list_cart = response.data.cart.products;\n        await this.update_total();\n      } catch (error) {\n        this.error = 'Failed to fetch cart.';\n      }\n    },\n    async add_to_cart(id) {\n      try {\n        const response = await axios.post(`http://localhost:3004/api/carts/add/${id}`);\n        this.list_cart = response.data.cart.products;\n        await this.update_total();\n      } catch (error) {\n        this.error = 'Failed to add to cart.';\n      }\n    },\n    async update_total() {\n      try {\n        const response = await axios.get('http://localhost:3004/api/carts/summary');\n        this.total_price = response.data.total_price;\n        this.nbr_product = response.data.nbr_product;\n      } catch (error) {\n        this.error = 'Failed to update cart total.';\n      }\n    },\n    async remove_from_cart(id) {\n      try {\n        const response = await axios.post(`http://localhost:3004/api/carts/remove/${id}`);\n        this.list_cart = response.data.cart.products;\n        await this.update_total();\n      } catch (error) {\n        this.error = 'Failed to remove from cart.';\n      }\n    },\n    async addNewProduct() {\n      try {\n        const response = await axios.post('http://localhost:3004/api/products', this.newProduct);\n        this.products.push(response.data.result);\n        this.newProduct = {\n          name: '',\n          desc: '',\n          price: 0\n        }; // Reset form fields\n      } catch (error) {\n        this.error = 'Failed to add new product.';\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","msg","String","data","products","list_cart","total_price","nbr_product","error","newProduct","desc","price","created","fetchProducts","fetchCart","methods","response","get","result","console","log","cart","update_total","add_to_cart","id","post","remove_from_cart","addNewProduct","push"],"sources":["src/components/IndexPage.vue"],"sourcesContent":["<template>\n    \n    \n    <div class=\"IndexPage\">\n        <br>\n        <div class=\"row\">\n            \n            <div class=\"jumbotron custom-banner\">\n                <h1 class=\"display-4\">VueJS Shopping App</h1>\n            </div>\n\n            <!-- Formulaire pour ajouter des produits -->\n            <div class=\"col-md-12\">\n                <div class=\"p-3 border bg-light\">\n                    <h5>Ajouter un nouveau produit</h5>\n                    <form @submit.prevent=\"addNewProduct\">\n                        <div class=\"mb-3\">\n                            <label for=\"productName\" class=\"form-label\">Nom</label>\n                            <input type=\"text\" class=\"form-control\" id=\"productName\" v-model=\"newProduct.name\" required>\n                        </div>\n                        <div class=\"mb-3\">\n                            <label for=\"productDesc\" class=\"form-label\">Description</label>\n                            <input type=\"text\" class=\"form-control\" id=\"productDesc\" v-model=\"newProduct.desc\" required>\n                        </div>\n                        <div class=\"mb-3\">\n                            <label for=\"productPrice\" class=\"form-label\">Prix</label>\n                            <input type=\"number\" class=\"form-control\" id=\"productPrice\" v-model=\"newProduct.price\" required>\n                        </div>\n                        <button type=\"submit\" class=\"btn btn-primary\">Ajouter</button>\n                    </form>\n                </div>\n            </div>\n\n            <!--La liste des produits -->\n            <div class=\"col-md-9\">\n                <div class=\"row gx-4 gy-4 row-cols-3\">\n                    <div class=\"col\" v-for=\"(product, id) in products\" :key=\"id\">\n                        <div class=\"p-3 border bg-light\">\n                            <h5>{{ product.name }}</h5>\n                            <p>{{ product.desc }}</p>\n                            <p>{{ product.price }} </p>\n                            <button type=\"button\" class=\"btn btn-success btn-sm\" @click=\"add_to_cart(product._id)\"> Ajouter au panier </button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <!-- Panier -->\n            <div class=\"col-6 col-md-3\">\n                <div class=\"col\">\n                    <div class=\"p-3 border bg-success\">\n                        <h5>Cart </h5>\n                    </div>\n                </div>\n                <div class=\"row gx-4 row-cols-1\">\n                    <div class=\"col\" v-for=\"(value, id) in list_cart\" :key=\"id\">\n                        <div class=\"p-3 border bg-light\">\n                            <h5>{{value.product.name}}</h5>\n                            <h6>Quantity : {{value.quantity}}</h6>\n                            <button type=\"button\" class=\"btn btn-danger btn-sm\" @click=\"remove_from_cart(value.product._id)\"> Supprimer </button>\n                        </div>\n                    </div>\n                    <!-- Montant total  -->\n                    <div class=\"col\">\n                        <div class=\"p-3 border bg-success\">\n                            <h5>Total : {{total_price}} </h5>\n                            <h6>Nombre de produits : {{nbr_product}} </h6>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n    name: 'IndexPage',\n    props: {\n        msg: String\n    },\n    data() {\n        return {\n            products: [],\n            list_cart: [],\n            total_price: 0,\n            nbr_product: 0,\n            error: null,\n            newProduct: {\n                name: '',\n                desc: '',\n                price: 0\n            }\n        };\n    },\n    created() {\n        this.fetchProducts();\n        this.fetchCart();\n    },\n    methods: {\n        //Fonction permettant de récupérer ou ajouter des éléments via le server\n        async fetchProducts() {\n            try {\n                const response = await axios.get('http://localhost:3004/api/products/');\n                this.products = response.data.result;\n                console.log(this.products);\n            } catch (error) {\n                this.error = 'Failed to fetch products.';\n            }\n        },\n\n        async fetchCart() {\n            try {\n                const response = await axios.get('http://localhost:3004/api/carts/');\n                this.list_cart = response.data.cart.products;\n                await this.update_total();\n            } catch (error) {\n                this.error = 'Failed to fetch cart.';\n            }\n        },\n\n        async add_to_cart(id) {\n            try {\n                const response = await axios.post(`http://localhost:3004/api/carts/add/${id}`);\n                this.list_cart = response.data.cart.products;\n                await this.update_total();\n            } catch (error) {\n                this.error = 'Failed to add to cart.';\n            }\n        },\n\n        async update_total() {\n            try {\n                const response = await axios.get('http://localhost:3004/api/carts/summary');\n                this.total_price = response.data.total_price;\n                this.nbr_product = response.data.nbr_product;\n            } catch (error) {\n                this.error = 'Failed to update cart total.';\n            }\n        },\n\n        async remove_from_cart(id) {\n            try {\n                const response = await axios.post(`http://localhost:3004/api/carts/remove/${id}`);\n                this.list_cart = response.data.cart.products;\n                await this.update_total();\n            } catch (error) {\n                this.error = 'Failed to remove from cart.';\n            }\n        },\n\n        async addNewProduct() {\n            try {\n                const response = await axios.post('http://localhost:3004/api/products', this.newProduct);\n                this.products.push(response.data.result);\n                this.newProduct = { name: '', desc: '', price: 0 }; // Reset form fields\n            } catch (error) {\n                this.error = 'Failed to add new product.';\n            }\n        }\n    }\n};\n</script>\n\n<style scoped>\n.custom-banner {\n    background-color: #f2f2f2;\n    padding: 20px;\n    margin: 20px;\n    border-radius: 10px;\n}\n</style>\n"],"mappings":"AA4EA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACAC,GAAA,EAAAC;EACA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,SAAA;MACAC,WAAA;MACAC,WAAA;MACAC,KAAA;MACAC,UAAA;QACAV,IAAA;QACAW,IAAA;QACAC,KAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,aAAA;IACA,KAAAC,SAAA;EACA;EACAC,OAAA;IACA;IACA,MAAAF,cAAA;MACA;QACA,MAAAG,QAAA,SAAAlB,KAAA,CAAAmB,GAAA;QACA,KAAAb,QAAA,GAAAY,QAAA,CAAAb,IAAA,CAAAe,MAAA;QACAC,OAAA,CAAAC,GAAA,MAAAhB,QAAA;MACA,SAAAI,KAAA;QACA,KAAAA,KAAA;MACA;IACA;IAEA,MAAAM,UAAA;MACA;QACA,MAAAE,QAAA,SAAAlB,KAAA,CAAAmB,GAAA;QACA,KAAAZ,SAAA,GAAAW,QAAA,CAAAb,IAAA,CAAAkB,IAAA,CAAAjB,QAAA;QACA,WAAAkB,YAAA;MACA,SAAAd,KAAA;QACA,KAAAA,KAAA;MACA;IACA;IAEA,MAAAe,YAAAC,EAAA;MACA;QACA,MAAAR,QAAA,SAAAlB,KAAA,CAAA2B,IAAA,wCAAAD,EAAA;QACA,KAAAnB,SAAA,GAAAW,QAAA,CAAAb,IAAA,CAAAkB,IAAA,CAAAjB,QAAA;QACA,WAAAkB,YAAA;MACA,SAAAd,KAAA;QACA,KAAAA,KAAA;MACA;IACA;IAEA,MAAAc,aAAA;MACA;QACA,MAAAN,QAAA,SAAAlB,KAAA,CAAAmB,GAAA;QACA,KAAAX,WAAA,GAAAU,QAAA,CAAAb,IAAA,CAAAG,WAAA;QACA,KAAAC,WAAA,GAAAS,QAAA,CAAAb,IAAA,CAAAI,WAAA;MACA,SAAAC,KAAA;QACA,KAAAA,KAAA;MACA;IACA;IAEA,MAAAkB,iBAAAF,EAAA;MACA;QACA,MAAAR,QAAA,SAAAlB,KAAA,CAAA2B,IAAA,2CAAAD,EAAA;QACA,KAAAnB,SAAA,GAAAW,QAAA,CAAAb,IAAA,CAAAkB,IAAA,CAAAjB,QAAA;QACA,WAAAkB,YAAA;MACA,SAAAd,KAAA;QACA,KAAAA,KAAA;MACA;IACA;IAEA,MAAAmB,cAAA;MACA;QACA,MAAAX,QAAA,SAAAlB,KAAA,CAAA2B,IAAA,4CAAAhB,UAAA;QACA,KAAAL,QAAA,CAAAwB,IAAA,CAAAZ,QAAA,CAAAb,IAAA,CAAAe,MAAA;QACA,KAAAT,UAAA;UAAAV,IAAA;UAAAW,IAAA;UAAAC,KAAA;QAAA;MACA,SAAAH,KAAA;QACA,KAAAA,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}